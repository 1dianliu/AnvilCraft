public net.minecraft.world.item.crafting.Ingredient$ItemValue
public net.minecraft.server.MinecraftServer$ReloadableResources
public net.minecraft.world.item.crafting.Ingredient$Value
public net.minecraft.world.item.crafting.Ingredient$TagValue
public net.minecraft.world.inventory.BeaconMenu$PaymentSlot
public-f net.minecraft.world.item.crafting.RecipeManager recipes
public-f net.minecraft.world.item.crafting.Ingredient values
public-f net.minecraft.world.item.crafting.Ingredient$TagValue tag
public-f net.minecraft.world.item.crafting.Ingredient$ItemValue item
public-f net.minecraft.advancements.critereon.ItemPredicate count
public-f net.minecraft.world.level.block.state.StateHolder PROPERTY_ENTRY_TO_STRING_FUNCTION
public-f net.minecraft.world.inventory.AnvilMenu cost
public-f net.minecraft.world.inventory.AnvilMenu itemName
public-f net.minecraft.world.inventory.AnvilMenu repairItemCountCost
public-f net.minecraft.client.renderer.RenderStateShard RENDERTYPE_LINES_SHADER
public-f net.minecraft.client.renderer.RenderStateShard COLOR_WRITE
public-f net.minecraft.client.renderer.RenderStateShard NO_CULL
public-f net.minecraft.client.renderer.RenderStateShard NO_DEPTH_TEST
public-f net.minecraft.client.renderer.RenderStateShard VIEW_OFFSET_Z_LAYERING
public-f net.minecraft.server.level.ChunkMap updatingChunkMap
public-f net.minecraft.world.entity.item.FallingBlockEntity blockState
public net.minecraft.client.gui.screens.inventory.AbstractContainerScreen renderSlot(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;)V # renderSlot
public-f net.minecraft.world.entity.item.FallingBlockEntity blockState
public-f net.minecraft.world.entity.item.FallingBlockEntity cancelDrop
public-f net.minecraft.world.phys.BlockHitResult miss
public net.minecraft.world.item.BlockItem canPlace(Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z # canPlace

public net.minecraft.data.loot.BlockLootSubProvider add(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V # add
public net.minecraft.data.loot.BlockLootSubProvider createSinglePropConditionTable(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; # createSinglePropConditionTable
public net.minecraft.data.recipes.RecipeProvider stonecutterResultFromBase(Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V # stonecutterResultFromBase
public net.minecraft.data.recipes.RecipeProvider stonecutterResultFromBase(Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;I)V # stonecutterResultFromBase

public-f net.minecraft.client.gui.components.AbstractWidget render(Lnet/minecraft/client/gui/GuiGraphics;IIF)V # render

public net.minecraft.world.entity.Entity collide(Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; # collide

public net.minecraft.client.renderer.LevelRenderer renderBuffers # renderBuffers

public net.minecraft.world.item.crafting.AbstractCookingRecipe result # result
public net.minecraft.world.item.crafting.AbstractCookingRecipe ingredient # ingredient
public net.minecraft.world.item.crafting.ShapedRecipe result # result
public net.minecraft.world.item.crafting.ShapelessRecipe result # result

public net.minecraft.world.level.storage.loot.parameters.LootContextParamSets REGISTRY # REGISTRY